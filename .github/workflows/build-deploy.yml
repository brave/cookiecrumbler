name: Build and Deploy

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # Run every day at midnight
  push:
    branches:
      - main

concurrency:
  group: build-deploy
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read # This is required for actions/checkout

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Git clone the repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
        with:
          install: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: ${{ secrets.COOKIEMONSTER_AWS_ROLE_ARN }}
          role-session-name: github-actions-ecr
          aws-region: us-west-2

      - name: Login to public Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

      - name: Build, tag, and push image to Amazon ECR
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v6
        with:
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ vars.COOKIEMONSTER_ECR_REPOSITORY }}:latest

      - name: Trigger ECS deployment
        run: |
          aws ecs update-service --cluster ${{ vars.COOKIEMONSTER_ECS_CLUSTER_NAME }} --service ${{ vars.COOKIEMONSTER_ECS_SERVICE_NAME }} --force-new-deployment --query service.serviceName --output text
          aws ecs wait services-stable --cluster ${{ vars.COOKIEMONSTER_ECS_CLUSTER_NAME }} --services ${{ vars.COOKIEMONSTER_ECS_SERVICE_NAME }}
